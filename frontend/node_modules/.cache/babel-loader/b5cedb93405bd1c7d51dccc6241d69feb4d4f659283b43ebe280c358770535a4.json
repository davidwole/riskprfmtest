{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/RiskPRFM/frontend/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport '../styles/Register.css';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const token = useParams();\n  console.log(token);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  if (user) {\n    window.location.assign('/');\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newAccount = {\n      name,\n      email,\n      password\n    };\n    if (name == '' || name[0] == ' ' || email == '' || email[0] == ' ' || password == '' || password[0] == ' ') {\n      setError('Please fill in all fields');\n      setTimeout(() => {\n        setError(false);\n      }, 1800);\n      return;\n    }\n    const response = await fetch(`/api/users/register/${token}`, {\n      method: 'POST',\n      body: JSON.stringify(newAccount),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      window.location.assign('/');\n    }\n    if (!response.ok) {\n      setError(json.error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"register_title\",\n      children: \"Create Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error_indicator width\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success_indicator width\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Appointment created Successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit_button\",\n        disabled: loading,\n        children: loading ? 'Loading' : 'Create Account '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"OCKaySokrMYAKxZYOoBapgqOvxs=\", false, function () {\n  return [useParams];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useParams","jsxDEV","_jsxDEV","Register","_s","token","console","log","user","JSON","parse","localStorage","getItem","name","setName","email","setEmail","password","setPassword","loading","setLoading","error","setError","success","setSuccess","window","location","assign","handleSubmit","e","preventDefault","newAccount","setTimeout","response","fetch","method","body","stringify","headers","json","ok","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/david/Documents/RiskPRFM/frontend/src/pages/Register.jsx"],"sourcesContent":["import '../styles/Register.css';\nimport { useState } from 'react';\nimport { useParams  } from 'react-router-dom';\n\nexport default function Register() {\n    const token = useParams();\n    console.log(token);\n    \n    const user = JSON.parse(localStorage.getItem('user'));\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n\n    if(user){\n        window.location.assign('/');\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const newAccount = {\n            name,\n            email,\n            password\n        }\n\n        if(name == '' || name[0] == ' ' || email == '' || email[0] == ' ' || password == '' || password[0] == ' '){\n            setError('Please fill in all fields');\n\n            setTimeout(() => {\n                setError(false);\n            }, 1800);\n\n            return;\n        }\n\n        const response = await fetch(`/api/users/register/${token}`, {\n            method: 'POST',\n            body: JSON.stringify(newAccount),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        const json = await response.json();\n\n        if(response.ok){\n            window.location.assign('/');\n        }\n\n        if(!response.ok){\n            setError(json.error)\n        }\n\n        setLoading(false);\n    }\n    \n    return(\n        <div>\n            <h1 className='register_title'>Create Credentials</h1>\n            <form onSubmit={handleSubmit} className='register'>\n                {error &&\n                    <div className='error_indicator width'>\n                        <p>{ error }</p>\n                    </div>}\n                {success && \n                    <div className='success_indicator width'>\n                    <p>Appointment created Successfully.</p>\n                    </div>\n                }\n                <label>Name</label>\n                <input type='text' value={name} onChange={(e) => setName(e.target.value)} />\n                <label>Email</label>\n                <input type='email' value={email} onChange={(e) => setEmail(e.target.value)}/>\n                <label>Password</label>\n                <input type='password' value={password} onChange={(e) => setPassword(e.target.value)} />\n                <button className='submit_button' disabled={loading}>{ loading ? 'Loading' : 'Create Account '}</button>\n            </form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}